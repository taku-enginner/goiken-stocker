name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      
      - name: Give execution permissions to bin/brakeman
        run: chmod +x bin/brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
        
      - name: Give execution permissions to bin/rubocop
        run: chmod +x bin/rubocop

      - name: Lint code for consistent style
        run: bin/rubocop -a -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
      # postgresサービス

        image: postgres
        # 使用するイメージの指定

        env:
        # 環境変数の指定

          POSTGRES_USER: postgres
          # PostgreSQLのユーザー名を指定

          POSTGRES_PASSWORD: password
          # PostgreSQLのパスワードを指定
          
          POSTGRES_DB: myapp_test
          # 作成するデータベース名を指定
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install dependencies
        run: bundle install
      
      # アセットプリコンパイルを実施
      # manifest.jsにも下記を追記する
      # //= link application.tailwind.css
      - name: Precompile assets
        run: RAILS_ENV=test bundle exec rake assets:precompile

        
      - name: Set up database.yml
        run: cp config/database.yml.example config/database.yml

      - name: Create and migrate database
        run: |
          export PATH=$PATH:./bin
          bin/rails db:create
          bin/rails db:migrate

        
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@localhost:5432/myapp_test
          # postgres: データベースユーザー名
          # password: データベースパスワード
          # @localhost: ホスト名
          # 5432: ポート番号
          # myapp_test: データベース名
          # REDIS_URL: redis://localhost:6379/0
        run: bundle exec rspec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
